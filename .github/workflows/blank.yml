name: Build Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: back-trip-app

    strategy:
      matrix:
        service: [back-trip-app, back-trip-manager]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Enable debug logs
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
          TG_BOT_KEY: ${{ secrets.TG_BOT_KEY }}
          TG_BOT_NAME: ${{ secrets.TG_BOT_NAME }}
          TG_BOT_MANAGER_URL: ${{ secrets.TG_BOT_MANAGER_URL }}
        working-directory: ./app/back
        run: ./gradlew build --info -Dspring.profiles.active=prod

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image for ${{ matrix.service }}
        run: |
          BASE_PATH="app/back"
          SERVICE_PATH="$BASE_PATH/${{ matrix.service }}"
          cd $SERVICE_PATH
          docker build -t prod-${{ matrix.service }}:latest .

      - name: Verify Docker image built successfully
        run: docker images | grep "prod-${{ matrix.service }}"

      - name: Push Docker Image
        run: |
          docker tag app:${{ matrix.service }} prod/app:${{ matrix.service }}
          docker push prod/app:${{ matrix.service }}

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install | bash
          export PATH=$PATH:/root/.railway/bin

      - name: Deploy to Railway
        env:
          SERVICE: ${{ matrix.service }}
          RAILWAY_PROJECT_BACK_TRIP_MAIN_APP: ${{ secrets.RAILWAY_PROJECT_BACK_TRIP_MAIN_APP }}
          RAILWAY_PROJECT_BACK_TRIP_MANAGER: ${{ secrets.RAILWAY_PROJECT_BACK_TRIP_MANAGER }}
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          if [ "$SERVICE" == "back-trip-app" ]; then
            railway up --image prod/app:${{ matrix.service }} --project $RAILWAY_PROJECT_BACK_TRIP_MAIN_APP
          elif [ "$SERVICE" == "back-trip-manager" ]; then
            railway up --image prod/app:${{ matrix.service }} --project $RAILWAY_PROJECT_BACK_TRIP_MANAGER
          fi

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-${{ matrix.service }}-            
